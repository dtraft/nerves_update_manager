name: Release

on: workflow_dispatch

jobs:
  release:
    name: Release Package
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - uses: erlef/setup-beam@v1
        with:
          otp-version: 27
          elixir-version: 1.17.2

      # Step: Define how to cache deps. Restores existing cache if present.
      - name: Cache deps
        id: cache-deps
        uses: actions/cache@v3
        env:
          cache-name: cache-elixir-deps
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-

      # Step: Define how to cache the `_build` directory. After the first run,
      # this speeds up tests runs a lot. This includes not re-compiling our
      # project's downloaded deps every run.
      - name: Cache compiled build
        id: cache-build
        uses: actions/cache@v3
        env:
          cache-name: cache-compiled-build
        with:
          path: _build
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-
            ${{ runner.os }}-mix-

      # Step: Conditionally bust the cache when job is re-run.
      - name: Clean to rule out incremental build as a source of flakiness
        if: github.run_attempt != '1'
        run: |
          mix deps.clean --all
          mix clean
        shell: sh
      
      - name: Get Version
        id: get-version
        run: echo "version=$(cat VERSION)" >> "$GITHUB_OUTPUT"

      - name: Create release notes
        run: grep -Pazo "(?s)(?<=## v${{ steps.get-version.outputs.version }})[^#]+" CHANGELOG.md | sed '/./,$!d' > RELEASE_NOTES
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          tag_name: v${{ steps.get-version.outputs.version}}
          body_path: RELEASE_NOTES
            
      - name: Fetch Dependencies
        run: mix deps.get
      
      - name: Publish Package
        run: mix hex.publish --yes
        env:
          HEX_API_KEY: ${{ secrets.HEX_API_KEY }}

  prepare-next-release:
    name: Prepare Next Release
    needs: [ release ]
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Get Next Version
        id: get-next-version
        run: echo "version=$(cat VERSION | awk -F. '{OFS="."; $NF+=1; print $0}')" >> "$GITHUB_OUTPUT"

      - name: Set Next Version
        run: echo ${{ steps.get-next-version.outputs.version}} > VERSION

      - name: Prepare Changelog
        run: sed -i '3s/^/## v${{ steps.get-next-version.outputs.version}}\r\n\r\n/' CHANGELOG.md

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Bump version for next release